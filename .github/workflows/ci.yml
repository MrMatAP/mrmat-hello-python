#
# Perform a regular build on any branch except main

name: build

on:
  push:
  pull_request:
    types: [assigned, opened, synchronize, reopened]

jobs:
  # Dynamically calculate the version of this build
  version:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
    - name: Version the project
      uses: MrMatAP/mrmat-versioning-action@1.0.7
      with:
        ecosystem: python
        major: 1
        minor: 1

  # A regular project build. Test results will explicitly be reported during a pull request build
  build:
    runs-on: ubuntu-latest
    needs: version
    permissions:
      contents: read
    env:
      MRMAT_VERSION: ${{ needs.version.outputs.version }}
    steps:
    - name: Checkout out our code
      uses: actions/checkout@v5.0.0
    - name: Set up uv and Python
      uses: astral-sh/setup-uv@v6.0.0
      with:
        enable-cache: true
        python-version: 3.13.7
    - name: Build
      run: uv build --wheel
    - name: Test
      run: uv run --frozen pytest --junit-xml=${GITHUB_WORKSPACE}/build/junit.xml --cov-report=json:${GITHUB_WORKSPACE}/build/coverage.json
    - name: Upload unit test results
      if: ${{ github.event_name == 'pull_request' }}
      uses: actions/upload-artifact@v4
      with:
        name: Unit Test Results
        path: build/junit.xml
    - name: Upload coverage results
      if: ${{ github.event_name == 'pull_request' }}
      uses: actions/upload-artifact@v4
      with:
        name: Coverage Results
        path: build/coverage.xml
    - name: Lint
      if: ${{ github.event_name == 'pull_request' }}
      run: python -m mypy --no-incremental --junit-xml=${GITHUB_WORKSPACE}/build/lint.xml ${GITHUB_WORKSPACE}/src/mhpython || true
    - name: Upload linting results
      if: ${{ github.event_name == 'pull_request' }}
      uses: actions/upload-artifact@v4
      with:
        name: Lint Results
        path: build/lint.xml

  # The release job only executes when pushing to the main branch
  release:
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
    needs:
    - version
    - build
    steps:
    - name: Create Release
      id: create_release
      uses: actions/create-release@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ needs.version.outputs.version }}
        release_name: Release ${{ needs.version.outputs.version }}
        body: |
          Release ${{ needs.version.outputs.version }}
        draft: false
        prerelease: false
